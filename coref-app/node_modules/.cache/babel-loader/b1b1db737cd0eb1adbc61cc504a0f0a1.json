{"ast":null,"code":"var _jsxFileName = \"/Users/moritz/WebstormProjects/coref-app/src/Components/Text.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { Button, TextField } from \"@mui/material\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Text(props) {\n  _s();\n\n  const theme = useTheme();\n  const [text, setText] = useState(\"\");\n  const [clust, setClust] = useState([[]]);\n\n  async function submitText(input) {\n    try {\n      const {\n        data\n      } = await axios.post(`http://127.0.0.1:5000/model`, {\n        input\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        }\n      });\n      console.log(JSON.stringify(data, null, 4));\n      return data;\n    } catch (error) {\n      if (axios.isAxiosError(error)) {\n        console.log('error message: ', error.message); // üëáÔ∏è error: AxiosError<any, any>\n\n        return error.message;\n      } else {\n        console.log('unexpected error: ', error);\n        return 'An unexpected error occurred';\n      }\n    }\n  }\n  /**\n  function submitText(text: any) {\n      const header = new AxiosRequestConfig();\n      header.append('Access-Control-Allow-Origin', '*');\n      const body = {\n          \"text\":text\n      }\n      var result;\n      console.log(body)\n      console.log(header)\n      axios.post(`http://127.0.0.1:5000/model`, body,header)\n          .then(res => {\n              console.log(res);\n              console.log(res.data);\n              console.log(res.data.clusters);\n              setClust(res.data.clusters)\n              sendDataToParent(res.data.clusters)\n          }).catch((error) => {\n          this.setState({\n              error: error.message\n          });\n      })\n  }\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"text\",\n      multiline: true,\n      rows: 28,\n      variant: \"outlined\",\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => submitText(text),\n      color: \"primary\",\n      variant: \"contained\",\n      style: {\n        marginTop: 15\n      },\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: clust[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Text, \"0RKybVtbIXRcmQEtipdyCKdSUA0=\", false, function () {\n  return [useTheme];\n});\n\n_c = Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["React","useState","useTheme","Button","TextField","axios","Text","props","theme","text","setText","clust","setClust","submitText","input","data","post","headers","Accept","console","log","JSON","stringify","error","isAxiosError","message","e","target","value","marginTop"],"sources":["/Users/moritz/WebstormProjects/coref-app/src/Components/Text.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport {Button, TextField} from \"@mui/material\";\nimport axios from 'axios';\n\nexport default function Text(props: any) {\n    const theme = useTheme();\n    const [text, setText] = useState(\"\")\n    const [clust, setClust] = useState([[]])\n\n    async function submitText(input: string) {\n        try{\n            const { data } = await axios.post<string>(\n                `http://127.0.0.1:5000/model`,\n                { input },\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Accept: 'application/json',\n                        \n                        'Access-Control-Allow-Origin': '*'\n                    },\n                },\n            );\n            console.log(JSON.stringify(data, null, 4));\n            return data;\n        }\n        catch (error) {\n            if (axios.isAxiosError(error)) {\n                console.log('error message: ', error.message);\n                // üëáÔ∏è error: AxiosError<any, any>\n                return error.message;\n            } else {\n                console.log('unexpected error: ', error);\n                return 'An unexpected error occurred';\n            }\n        }\n    }\n\n    /**\n    function submitText(text: any) {\n        const header = new AxiosRequestConfig();\n        header.append('Access-Control-Allow-Origin', '*');\n        const body = {\n            \"text\":text\n        }\n        var result;\n        console.log(body)\n        console.log(header)\n        axios.post(`http://127.0.0.1:5000/model`, body,header)\n            .then(res => {\n                console.log(res);\n                console.log(res.data);\n                console.log(res.data.clusters);\n                setClust(res.data.clusters)\n                sendDataToParent(res.data.clusters)\n            }).catch((error) => {\n            this.setState({\n                error: error.message\n            });\n        })\n    }\n     */\n\n    return (\n        <>\n            <TextField\n                label={\"text\"}\n                multiline rows={28}\n                variant={\"outlined\"}\n                onChange={(e) => setText(e.target.value)}>\n            </TextField>\n            <Button onClick={() => submitText(text)} color={\"primary\"} variant={\"contained\"} style={{marginTop: 15}}>Submit</Button>\n            <p>{clust[0]}</p>\n        </>\n    );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,eAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAA0B;EAAA;;EACrC,MAAMC,KAAK,GAAGN,QAAQ,EAAtB;EACA,MAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;;EAEA,eAAeY,UAAf,CAA0BC,KAA1B,EAAyC;IACrC,IAAG;MACC,MAAM;QAAEC;MAAF,IAAW,MAAMV,KAAK,CAACW,IAAN,CAClB,6BADkB,EAEnB;QAAEF;MAAF,CAFmB,EAGnB;QACIG,OAAO,EAAE;UACL,gBAAgB,kBADX;UAELC,MAAM,EAAE,kBAFH;UAIL,+BAA+B;QAJ1B;MADb,CAHmB,CAAvB;MAYAC,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeP,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAZ;MACA,OAAOA,IAAP;IACH,CAfD,CAgBA,OAAOQ,KAAP,EAAc;MACV,IAAIlB,KAAK,CAACmB,YAAN,CAAmBD,KAAnB,CAAJ,EAA+B;QAC3BJ,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BG,KAAK,CAACE,OAArC,EAD2B,CAE3B;;QACA,OAAOF,KAAK,CAACE,OAAb;MACH,CAJD,MAIO;QACHN,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCG,KAAlC;QACA,OAAO,8BAAP;MACH;IACJ;EACJ;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EAEI,oBACI;IAAA,wBACI,QAAC,SAAD;MACI,KAAK,EAAE,MADX;MAEI,SAAS,MAFb;MAEc,IAAI,EAAE,EAFpB;MAGI,OAAO,EAAE,UAHb;MAII,QAAQ,EAAGG,CAAD,IAAOhB,OAAO,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;IAJ5B;MAAA;MAAA;MAAA;IAAA,QADJ,eAOI,QAAC,MAAD;MAAQ,OAAO,EAAE,MAAMf,UAAU,CAACJ,IAAD,CAAjC;MAAyC,KAAK,EAAE,SAAhD;MAA2D,OAAO,EAAE,WAApE;MAAiF,KAAK,EAAE;QAACoB,SAAS,EAAE;MAAZ,CAAxF;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ,eAQI;MAAA,UAAIlB,KAAK,CAAC,CAAD;IAAT;MAAA;MAAA;MAAA;IAAA,QARJ;EAAA,gBADJ;AAYH;;GAvEuBL,I;UACNJ,Q;;;KADMI,I"},"metadata":{},"sourceType":"module"}